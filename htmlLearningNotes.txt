Must start an HTML file with the <!DOCTYPE> declaration
It must only appear once at the top of the page before any HTML tags
The <!DOCTYPE> declaration for HTML 5 is <!DOCTYPE html>

HTML headings are defined with the <h1> to <h6> tags.

HTML paragraphs are defined with the <p> tag

HTML links are defined with the <a> tag:
Example
<a href="https://www.w3schools.com">This is a link</a> 

HTML Images

    HTML images are defined with the <img> tag.

    The source file (src), alternative text (alt), width, and height are provided as attributes:
    Example
    <img src="w3schools.jpg" alt="W3Schools.com" width="104" height="142"> 

HTML Attributes

    All HTML elements can have attributes
    Attributes provide additional information about elements
    Attributes are always specified in the start tag
    Attributes usually come in name/value pairs like: name="value"

There are two ways to specify the URL in the src attribute:

    1. Absolute URL - Links to an external image that is hosted on another website. Example: src="https://www.w3schools.com/images/img_girl.jpg".

    Notes: External images might be under copyright. If you do not get permission to use it, you may be in violation of copyright laws. In addition, you cannot control external images; it can suddenly be removed or changed.

    2. Relative URL - Links to an image that is hosted within the website. Here, the URL does not include the domain name. If the URL begins without a slash, it will be relative to the current page. Example: src="img_girl.jpg". If the URL begins with a slash, it will be relative to the domain. Example: src="/images/img_girl.jpg".

        Tip: It is almost always best to use relative URLs. They will not break if you change domain.

HTML Attributes

    All HTML elements can have attributes
    The href attribute of <a> specifies the URL of the page the link goes to
    The src attribute of <img> specifies the path to the image to be displayed
    The width and height attributes of <img> provide size information for images
    The alt attribute of <img> provides an alternate text for an image
    The style attribute is used to add styles to an element, such as color, font, size, and more
    The lang attribute of the <html> tag declares the language of the Web page
    The title attribute defines some extra information about an element

Headings Are Important

    Search engines use the headings to index the structure and content of your web pages.

    Users often skim a page by its headings. It is important to use headings to show the document structure.

    <h1> headings should be used for main headings, followed by <h2> headings, then the less important <h3>, and so on.

The Poem Problem

    This poem will display on a single line:
    Example
    <p>
    My Bonnie lies over the ocean.

    My Bonnie lies over the sea.

    My Bonnie lies over the ocean.

    Oh, bring back my Bonnie to me.
    </p>
    Solution - The HTML <pre> Element

    The HTML <pre> element defines preformatted text.

    The text inside a <pre> element is displayed in a fixed-width font (usually Courier), and it preserves both spaces and line breaks:
    Example
    <pre>
    My Bonnie lies over the ocean.

    My Bonnie lies over the sea.

    My Bonnie lies over the ocean.

    Oh, bring back my Bonnie to me.
    </pre> 

HTML Styles

    The HTML style attribute is used to add styles to an element, such as color, font, size, and more

    The HTML style attribute has the following syntax:
    <tagname style="property:value;">

    The HTML tutorial explains inline CSS styling.

    HSLA for setting color stands for hue, saturation, lightness and an Alpha channel for transparency in order.
    Same is true for RGBA. Red, green, blue, alpha, channel for transparency respectively.
    Hexidecimal colors are also red, gree, blue, displayed as #000000 for black.

RGB Color Values

    In HTML, a color can be specified as an RGB value, using this formula:

    rgb(red, green, blue)

    Each parameter (red, green, and blue) defines the intensity of the color with a value between 0 and 255.

    This means that there are 256 x 256 x 256 = 16777216 possible colors!

    For example, rgb(255, 0, 0) is displayed as red, because red is set to its highest value (255), and the other two (green and blue) are set to 0.

    Another example, rgb(0, 255, 0) is displayed as green, because green is set to its highest value (255), and the other two (red and blue) are set to 0.

    To display black, set all color parameters to 0, like this: rgb(0, 0, 0).

    To display white, set all color parameters to 255, like this: rgb(255, 255, 255). 

Using CSS

    CSS can be added to HTML documents in 3 ways:

    Inline - by using the style attribute inside HTML elements
    Internal - by using a <style> element in the <head> section
    External - by using a <link> element to link to an external CSS file

    The most common way to add CSS, is to keep the styles in external CSS files.

    The external style sheet can be written in any text editor. 
    The file must not contain any HTML code, and must be saved with a .css extension.

    Linking CSS Examples:
    This example uses a full URL to link to a style sheet:
    <link rel="stylesheet" href="https://www.w3schools.com/html/styles.css">

    This example links to a style sheet located in the html folder on the current web site: 
    <link rel="stylesheet" href="/html/styles.css">

    This example links to a style sheet located in the same folder as the current page:
    <link rel="stylesheet" href="styles.css"> 

HTML Images Syntax

    The HTML <img> tag is used to embed an image in a web page.

    Images are not technically inserted into a web page; images are linked to web pages. The <img> tag creates a holding space for the referenced image.

    The <img> tag is empty, it contains attributes only, and does not have a closing tag.

    The <img> tag has two required attributes:

    src - Specifies the path to the image
    alt - Specifies an alternate text for the image

    You can use the style attribute to specify the width and height of an image.
    Example
    <img src="img_girl.jpg" alt="Girl in a jacket" style="width:500px;height:600px;">

    Alternatively, you can use the width and height attributes:
    Example
    <img src="img_girl.jpg" alt="Girl in a jacket" width="500" height="600">

    The width, height, and style attributes are all valid in HTML.
    However, we suggest using the style attribute. It prevents styles sheets from changing the size of images

    Common Image Formats

    Here are the most common image file types, which are supported in all browsers (Chrome, Edge, Firefox, Safari, Opera):
    Abbreviation 	        File Format 	                        File Extension
    APNG 	                Animated Portable Network Graphics 	    .apng
    GIF 	                Graphics Interchange Format 	        .gif
    ICO 	                Microsoft Icon 	                        .ico, .cur
    JPEG 	                Joint Photographic Expert Group image 	.jpg, .jpeg, .jfif, .pjpeg, .pjp
    PNG 	                Portable Network Graphics 	            .png
    SVG 	                Scalable Vector Graphics 	            .svg

HTML Table

    A table cell can contain all sorts of HTML elements: text, images, lists, links, other tables, etc

Using The class Attribute

    The class attribute is often used to point to a class name in a style sheet. 
    It can also be used by a JavaScript to access and manipulate elements with the specific class name.

    To create a class; write a period (.) character, followed by a class name. 
    Then, define the CSS properties within curly braces {}

Using The id Attribute

    The id attribute specifies a unique id for an HTML element. 
    The value of the id attribute must be unique within the HTML document.

    The id attribute is used to point to a specific style declaration in a style sheet. 
    It is also used by JavaScript to access and manipulate the element with the specific id.

    The syntax for id is: write a hash character (#), followed by an id name. 
    Then, define the CSS properties within curly braces {}

    A class name can be used by multiple HTML elements, 
    while an id name must only be used by one HTML element within the page

The HTML <script> Tag

    The HTML <script> tag is used to define a client-side script (JavaScript).

    The <script> element either contains script statements, or it points to an external script file through the src attribute.

    Common uses for JavaScript are image manipulation, form validation, and dynamic changes of content.

    To select an HTML element, JavaScript most often uses the document.getElementById() method.

HTML Form Attributes

    The action attribute defines the action to be performed when the form is submitted.
    Usually, the form data is sent to a file on the server when the user clicks on the submit button.
    If the action attribute is omitted, the action is set to the current page.

    The target attribute specifies where to display the response that is received after submitting the form.

    The target attribute can have one of the following values:
    Value 	                Description
    _blank 	                The response is displayed in a new window or tab
    _self 	                The response is displayed in the current window
    _parent 	            The response is displayed in the parent frame
    _top 	                The response is displayed in the full body of the window
    framename 	            The response is displayed in a named iframe
    The default value is _self which means that the response will open in the current window.

The Method Attribute

    The method attribute specifies the HTTP method to be used when submitting the form data.
    The form-data can be sent as URL variables (with method="get") or as HTTP post transaction (with method="post").
    The default HTTP method when submitting form data is GET.

    Notes on GET:

    Appends the form data to the URL, in name/value pairs
    NEVER use GET to send sensitive data! (the submitted form data is visible in the URL!)
    The length of a URL is limited (2048 characters)
    Useful for form submissions where a user wants to bookmark the result
    GET is good for non-secure data, like query strings in Google

    Notes on POST:

    Appends the form data inside the body of the HTTP request (the submitted form data is not shown in the URL)
    POST has no size limitations, and can be used to send large amounts of data.
    Form submissions with POST cannot be bookmarked

The Autocomplete Attribute

    The autocomplete attribute specifies whether a form should have autocomplete on or off.

    When autocomplete is on, the browser automatically complete values based on values that the user has entered before.

The Novalidate Attribute

    The novalidate attribute is a boolean attribute.

    When present, it specifies that the form-data (input) should not be validated when submitted.

The HTML <form> Elements

    The HTML <form> element can contain one or more of the following form elements:

    <input>
    <label>
    <select>
    <textarea>
    <button>
    <fieldset>
    <legend>
    <datalist>
    <output>
    <option>
    <optgroup>

The <label> Element

    The <label> element defines a label for several form elements.

    The <label> element is useful for screen-reader users, because the screen-reader will read out loud the label when the user focus on the input element.

    The <label> element also help users who have difficulty clicking on very small regions (such as radio buttons or checkboxes) - because when the user clicks the text within the <label> element, it toggles the radio button/checkbox.

    The for attribute of the <label> tag should be equal to the id attribute of the <input> element to bind them together.     
   
HTML Input Types

    Here are the different input types you can use in HTML:

    <input type="button">
    <input type="checkbox">
    <input type="color">
    <input type="date">
    <input type="datetime-local">
    <input type="email">
    <input type="file">
    <input type="hidden">
    <input type="image">
    <input type="month">
    <input type="number">
    <input type="password">
    <input type="radio">
    <input type="range">
    <input type="reset">
    <input type="search">
    <input type="submit">
    <input type="tel">
    <input type="text">
    <input type="time">
    <input type="url">
    <input type="week">

Input Restrictions

    Here is a list of some common input restrictions:
    Attribute 	    Description
    checked 	    Specifies that an input field should be pre-selected when the page loads (for type="checkbox" or type="radio")
    disabled 	    Specifies that an input field should be disabled
    max 	        Specifies the maximum value for an input field
    maxlength 	    Specifies the maximum number of character for an input field
    min 	        Specifies the minimum value for an input field
    pattern 	    Specifies a regular expression to check the input value against
    readonly 	    Specifies that an input field is read only (cannot be changed)
    required 	    Specifies that an input field is required (must be filled out)
    size 	        Specifies the width (in characters) of an input field
    step 	        Specifies the legal number intervals for an input field
    value 	        Specifies the default value for an input field

The formenctype Attribute

    The input formenctype attribute specifies how the form-data should be encoded when submitted (only for forms with method="post").

    Note: This attribute overrides the enctype attribute of the <form> element.

    The formenctype attribute works with the following input types: submit and image.

What is HTML Canvas?

    The HTML <canvas> element is used to draw graphics, on the fly, via JavaScript.

    The <canvas> element is only a container for graphics. You must use JavaScript to actually draw the graphics.

    Canvas has several methods for drawing paths, boxes, circles, text, and adding images.

    Canvas is supported by all major browsers.

    Always specify an id attribute (to be referred to in a script), 
    and a width and height attribute to define the size of the canvas. 
    To add a border, use the style attribute.

What is SVG?

    SVG stands for Scalable Vector Graphics
    SVG is used to define vector-based graphics for the Web
    SVG defines graphics in XML format
    Each element and attribute in SVG files can be animated
    SVG is a W3C recommendation
    SVG integrates with other standards, such as CSS, DOM, XSL and JavaScript

Differences Between SVG and Canvas

    SVG is a language for describing 2D graphics in XML, while Canvas draws 2D graphics, on the fly (with JavaScript).

    SVG is XML based, which means that every element is available within the SVG DOM. You can attach JavaScript event handlers to SVG graphics.

    In SVG, each drawn shape is remembered as an object. If attributes of an SVG object are changed, the browser can automatically re-render the shape.

    Canvas is rendered pixel by pixel. In canvas, once the graphic is drawn, it is forgotten by the browser. If its position should be changed, 
    the entire scene needs to be redrawn, including any objects that might have been covered by the graphic.

HTML Plug-ins

    Plug-ins are computer programs that extend the standard functionality of the browser.
    Plug-ins

    Plug-ins were designed to be used for many different purposes:

    To run Java applets
    To run Microsoft ActiveX controls
    To display Flash movies
    To display maps
    To scan for viruses
    To verify a bank id




